version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.4.0
  node: circleci/node@4.2.0

executors:
  node:
    docker:
      - image: cimg/node:15.10.0

jobs:
  build_and_test:
    executor: node
    steps:
      - run:
          name: 'Show node and NPM versions'
          command: |
            node -v |
            npm -v
      - checkout
      - run: export NPM_TOKEN=${NPM_TOKEN}
      - node/install-packages
      - run:
          name: 'Building React App'
          command: |
            CI=false && npm run build
      - run:
          command: npx eslint ./src --ext .js,.ts,.jsx,.tsx
          name: ESlint
      - run:
          name: 'Run tests'
          command: npm test -- --collectCoverage=true --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/
      - store_artifacts:
          path: ./reports/junit
      - store_artifacts:
          path: coverage

  deploy:
    parameters:
      deploy_env:
        type: string
    environment:
      REACT_APP_STAGE: << parameters.deploy_env >>
    executor: node
    steps:
      - run: echo "The REACT_APP_STAGE variable is ${REACT_APP_STAGE}"
      - checkout
      - aws-cli/setup
      - run:
          name: 'Install aws-amplify CLI'
          command: |
            sudo npm install -g @aws-amplify/cli
      - run:
          name: 'Show AWS CLI and Amplify Versions'
          command: |
            aws --version
            amplify --version
      - run: export NPM_TOKEN=${NPM_TOKEN}
      - node/install-packages
      - run: CI=false && npm run build
      - run:
          name: 'Initiate << parameters.deploy_env >> Environment'
          command: |
            amplify init --amplify "{\"envName\":\"<< parameters.deploy_env >>\"}" --providers "{\"awscloudformation\":{\"useProfile\":true,\"profileName\":\"default\"}}" --yes
      - run:
          name: 'Checkout Amplify << parameters.deploy_env >> Environment'
          command: |
            amplify env checkout << parameters.deploy_env >>
      - run:
          name: 'Deploy to << parameters.deploy_env >>'
          command: |
            CI=false && amplify publish  -- yes

workflows:
  Deploy:
    jobs:
      - build_and_test
      - deploy:
          context:
            - aws-cli
            - github
          name: DeployDev
          deploy_env: dev
          requires:
            - build_and_test
          filters:
            branches:
              only:
                - dev
      - request_production_deploy:
          type: approval
          filters:
            branches:
              only:
                - master
      - deploy:
          context:
            - aws-cli
            - github
          name: DeployProduction
          deploy_env: prod
          requires:
            - request_production_deploy
            - build_and_test
          filters:
            branches:
              only:
                - master
